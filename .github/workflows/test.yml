name: test
on:
  push: { branches: ["**"] }
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TZ: UTC
  LANG: C.UTF-8

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p workflow-cookbook/logs
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: '**/package-lock.json'
      - name: ESLint (if exists)
        run: |
          set -Eeuo pipefail
          install_deps() {
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          }

          if [ -f package.json ] && node -e "const p=require('./package.json');process.exit(!(p.scripts&&p.scripts.lint))"; then
            start=$(date +%s%3N)
            install_deps
            if npm run -s lint; then s=pass; else s=fail; fi
            echo "{\"name\":\"lint\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> workflow-cookbook/logs/test.jsonl
          else
            echo "{\"name\":\"lint\",\"status\":\"skip\",\"duration_ms\":0}" >> workflow-cookbook/logs/test.jsonl
          fi
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-logs
          path: workflow-cookbook/logs/*

  typecheck:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p workflow-cookbook/logs
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: '**/package-lock.json'
      - name: TypeScript (if exists)
        run: |
          set -Eeuo pipefail
          install_deps() {
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          }

          if [ -f tsconfig.json ]; then
            start=$(date +%s%3N)
            install_deps
            if npx tsc -noEmit; then s=pass; else s=fail; fi
            echo "{\"name\":\"typecheck\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> workflow-cookbook/logs/test.jsonl
          else
            echo "{\"name\":\"typecheck\",\"status\":\"skip\",\"duration_ms\":0}" >> workflow-cookbook/logs/test.jsonl
          fi
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-logs
          path: workflow-cookbook/logs/*

  unit:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p workflow-cookbook/logs
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: Node unit (repo root)
        if: ${{ hashFiles('package.json') != '' }}
        run: |
          set -Eeuo pipefail
          install_deps() {
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          }

          if [ -f package.json ] && node -e "const p=require('./package.json');process.exit(!(p.scripts&&p.scripts.test))"; then
            start=$(date +%s%3N)
            install_deps
            cmd=$(node -e "const p=require('./package.json');console.log(p.scripts&&p.scripts.test||'')" || true)
            args=()
            if echo "$cmd" | grep -qi 'jest'; then
              args=(-- --maxWorkers=2)
            fi
            if npm test --silent "${args[@]}"; then s=pass; else s=fail; fi
            echo "{\"name\":\"node::root\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> workflow-cookbook/logs/test.jsonl
          else
            echo "{\"name\":\"node::root\",\"status\":\"skip\",\"duration_ms\":0}" >> workflow-cookbook/logs/test.jsonl
          fi

      - name: Node unit (frontend/)
        if: ${{ hashFiles('frontend/package.json') != '' }}
        working-directory: frontend
        run: |
          set -Eeuo pipefail
          install_deps() {
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          }

          if [ -f package.json ] && node -e "const p=require('./package.json');process.exit(!(p.scripts&&p.scripts.test))"; then
            start=$(date +%s%3N)
            install_deps
            cmd=$(node -e "const p=require('./package.json');console.log(p.scripts&&p.scripts.test||'')" || true)
            args=()
            if echo "$cmd" | grep -qi 'jest'; then
              args=(-- --maxWorkers=2)
            fi
            if npm test --silent "${args[@]}"; then s=pass; else s=fail; fi
            echo "{\"name\":\"node::frontend\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> ../workflow-cookbook/logs/test.jsonl
          else
            echo "{\"name\":\"node::frontend\",\"status\":\"skip\",\"duration_ms\":0}" >> ../workflow-cookbook/logs/test.jsonl
          fi

      - name: Node unit (packages/*)
        if: ${{ hashFiles('packages/*/package.json') != '' }}
        run: |
          set -Eeuo pipefail
          install_deps() {
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          }

          shopt -s nullglob
          for PKG in packages/*; do
            if [ -f "$PKG/package.json" ] && (cd "$PKG" && node -e "const p=require('./package.json');process.exit(!(p.scripts&&p.scripts.test))"); then
              pushd "$PKG" >/dev/null
              start=$(date +%s%3N)
              install_deps
              cmd=$(node -e "const p=require('./package.json');console.log(p.scripts&&p.scripts.test||'')" || true)
              args=()
              if echo "$cmd" | grep -qi 'jest'; then
                args=(-- --maxWorkers=2)
              fi
              if npm test --silent "${args[@]}"; then s=pass; else s=fail; fi
              popd >/dev/null
              echo "{\"name\":\"node::${PKG}\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> workflow-cookbook/logs/test.jsonl
            elif [ -f "$PKG/package.json" ]; then
              echo "{\"name\":\"node::${PKG}\",\"status\":\"skip\",\"duration_ms\":0}" >> workflow-cookbook/logs/test.jsonl
            fi
          done
          shopt -u nullglob

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Pytest (repo root)
        if: ${{ hashFiles('pyproject.toml') != '' || hashFiles('requirements*.txt') != '' || hashFiles('requirements/*.txt') != '' }}
        run: |
          set -Eeuo pipefail
          pip install -U pip wheel || true
          pip install -r requirements.txt 2>/dev/null || true
          pip install -r requirements/dev.txt 2>/dev/null || true
          pip install pytest || true
          start=$(date +%s%3N)
          if pytest -q; then s=pass; else s=fail; fi
          echo "{\"name\":\"python::root\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> workflow-cookbook/logs/test.jsonl

      - name: Pytest (backend/)
        if: ${{ hashFiles('backend/pyproject.toml') != '' || hashFiles('backend/requirements*.txt') != '' }}
        working-directory: backend
        run: |
          set -Eeuo pipefail
          pip install -U pip wheel || true
          pip install -r requirements.txt 2>/dev/null || true
          pip install -r requirements/dev.txt 2>/dev/null || true
          pip install pytest || true
          start=$(date +%s%3N)
          if pytest -q; then s=pass; else s=fail; fi
          echo "{\"name\":\"python::backend\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> ../workflow-cookbook/logs/test.jsonl

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: workflow-cookbook/logs/*

  build:
    needs: [lint, typecheck, unit]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p workflow-cookbook/logs dist
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: '**/package-lock.json'
      - name: Build (if exists)
        run: |
          set -Eeuo pipefail
          install_deps() {
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          }

          if [ -f package.json ] && node -e "const p=require('./package.json');process.exit(!(p.scripts&&p.scripts.build))"; then
            start=$(date +%s%3N)
            install_deps
            if npm run -s build; then s=pass; else s=fail; fi
            echo "{\"name\":\"build\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> workflow-cookbook/logs/test.jsonl
          else
            echo "{\"name\":\"build\",\"status\":\"skip\",\"duration_ms\":0}" >> workflow-cookbook/logs/test.jsonl
          fi
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-output
          path: dist/**
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-logs
          path: workflow-cookbook/logs/*

  e2e:
    needs: [build]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p workflow-cookbook/logs
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Playwright E2E (if exists)
        run: |
          set -Eeuo pipefail
          install_deps() {
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          }

          if [ -f package.json ] && node -e "const p=require('./package.json');process.exit(!(p.scripts&&p.scripts['test:e2e']))"; then
            start=$(date +%s%3N)
            install_deps
            npx playwright install --with-deps
            if npm run -s test:e2e; then s=pass; else s=fail; fi
            echo "{\"name\":\"e2e\",\"status\":\"$s\",\"duration_ms\":$(( $(date +%s%3N)-start ))}" >> workflow-cookbook/logs/test.jsonl
          else
            echo "{\"name\":\"e2e\",\"status\":\"skip\",\"duration_ms\":0}" >> workflow-cookbook/logs/test.jsonl
          fi
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-logs
          path: workflow-cookbook/logs/*

  report:
    needs: [lint, typecheck, unit, build, e2e]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: test-logs
          path: logs
      - name: Summarize & STRICT gate (optional)
        run: |
          set -Eeuo pipefail
          shopt -s nullglob
          files=(logs/**/test.jsonl logs/test.jsonl)
          collected=()
          for f in "${files[@]}"; do
            if [ -f "$f" ]; then
              collected+=("$f")
            fi
          done
          shopt -u nullglob

          if [ ${#collected[@]} -eq 0 ]; then
            echo "No JSONL found"
            exit 0
          fi

          echo "=== CI Summary (raw JSONL) ==="
          cat "${collected[@]}"

          fails=$(cat "${collected[@]}" | grep -c '"status":"fail"' || true)
          echo "Fail count: $fails"

          if [ "${CI_STRICT:-}" = "true" ] && [ "$fails" -gt 0 ]; then
            echo "STRICT mode: failing due to failed statuses."
            exit 1
          fi
